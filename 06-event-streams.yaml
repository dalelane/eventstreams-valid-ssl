apiVersion: eventstreams.ibm.com/v1beta2
kind: EventStreams
metadata:
  name: my-kafka-cluster
spec:
  license:
    accept: true
    use: CloudPakForIntegrationNonProduction
  requestIbmServices:
    iam: true
    monitoring: true
  strimziOverrides:
    entityOperator:
      topicOperator: {}
    kafka:
      authorization:
        authorizerClass: com.ibm.eventstreams.runas.authorizer.RunAsAuthorizer
        supportsAdminApi: true
        type: custom
      config:
        num.network.threads: 3
        inter.broker.protocol.version: '3.2'
        log.cleaner.threads: 6
        num.io.threads: 24
        num.replica.fetchers: 1
        min.insync.replicas: 1
        log.message.format.version: '3.2'
        offsets.topic.replication.factor: 1
        default.replication.factor: 1
      listeners:
        - authentication:
            type: scram-sha-512
          name: external
          port: 9094
          tls: true
          type: route
          configuration:
            brokerCertChainAndKey:
              certificate: tls.crt
              key: tls.key
              secretName: my-kafka-listeners-cert
      replicas: 1
      storage:
        type: ephemeral
    zookeeper:
      replicas: 1
      storage:
        type: ephemeral
  adminUI: {}
  restProducer:
    endpoints:
      - name: restproducer
        containerPort: 9080
        certOverrides:
          certificate: tls.crt
          key: tls.key
          secretName: my-custom-cert
  apicurioRegistry:
    endpoints:
      - name: apicurio
        containerPort: 9080
        certOverrides:
          certificate: tls.crt
          key: tls.key
          secretName: my-custom-cert
  adminApi:
    endpoints:
      - name: adminapi
        containerPort: 9080
        certOverrides:
          certificate: tls.crt
          key: tls.key
          secretName: my-custom-cert
    env:
      - name: IAM_SERVER_URL
        value: https://${cpconsoleroute}:443
  collector: {}
  version: 11.0.4
